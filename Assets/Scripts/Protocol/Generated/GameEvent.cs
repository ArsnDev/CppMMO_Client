// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GameEvent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static GameEvent GetRootAsGameEvent(ByteBuffer _bb) { return GetRootAsGameEvent(_bb, new GameEvent()); }
  public static GameEvent GetRootAsGameEvent(ByteBuffer _bb, GameEvent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GameEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CppMMO.Protocol.EventType EventType { get { int o = __p.__offset(4); return o != 0 ? (CppMMO.Protocol.EventType)__p.bb.Get(o + __p.bb_pos) : CppMMO.Protocol.EventType.NONE; } }
  public ulong SourcePlayerId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong TargetPlayerId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public CppMMO.Protocol.Vec3? Position { get { int o = __p.__offset(10); return o != 0 ? (CppMMO.Protocol.Vec3?)(new CppMMO.Protocol.Vec3()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public int Value { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<CppMMO.Protocol.GameEvent> CreateGameEvent(FlatBufferBuilder builder,
      CppMMO.Protocol.EventType event_type = CppMMO.Protocol.EventType.NONE,
      ulong source_player_id = 0,
      ulong target_player_id = 0,
      Offset<CppMMO.Protocol.Vec3> positionOffset = default(Offset<CppMMO.Protocol.Vec3>),
      int value = 0) {
    builder.StartTable(5);
    GameEvent.AddTargetPlayerId(builder, target_player_id);
    GameEvent.AddSourcePlayerId(builder, source_player_id);
    GameEvent.AddValue(builder, value);
    GameEvent.AddPosition(builder, positionOffset);
    GameEvent.AddEventType(builder, event_type);
    return GameEvent.EndGameEvent(builder);
  }

  public static void StartGameEvent(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddEventType(FlatBufferBuilder builder, CppMMO.Protocol.EventType eventType) { builder.AddByte(0, (byte)eventType, 0); }
  public static void AddSourcePlayerId(FlatBufferBuilder builder, ulong sourcePlayerId) { builder.AddUlong(1, sourcePlayerId, 0); }
  public static void AddTargetPlayerId(FlatBufferBuilder builder, ulong targetPlayerId) { builder.AddUlong(2, targetPlayerId, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<CppMMO.Protocol.Vec3> positionOffset) { builder.AddOffset(3, positionOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, int value) { builder.AddInt(4, value, 0); }
  public static Offset<CppMMO.Protocol.GameEvent> EndGameEvent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CppMMO.Protocol.GameEvent>(o);
  }
}


static public class GameEventVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*EventType*/, 1 /*CppMMO.Protocol.EventType*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*SourcePlayerId*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*TargetPlayerId*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyTable(tablePos, 10 /*Position*/, CppMMO.Protocol.Vec3Verify.Verify, false)
      && verifier.VerifyField(tablePos, 12 /*Value*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
