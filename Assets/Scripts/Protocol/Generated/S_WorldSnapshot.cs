// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct S_WorldSnapshot : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static S_WorldSnapshot GetRootAsS_WorldSnapshot(ByteBuffer _bb) { return GetRootAsS_WorldSnapshot(_bb, new S_WorldSnapshot()); }
  public static S_WorldSnapshot GetRootAsS_WorldSnapshot(ByteBuffer _bb, S_WorldSnapshot obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S_WorldSnapshot __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong TickNumber { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong ServerTime { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public CppMMO.Protocol.PlayerState? PlayerStates(int j) { int o = __p.__offset(8); return o != 0 ? (CppMMO.Protocol.PlayerState?)(new CppMMO.Protocol.PlayerState()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PlayerStatesLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public CppMMO.Protocol.GameEvent? Events(int j) { int o = __p.__offset(10); return o != 0 ? (CppMMO.Protocol.GameEvent?)(new CppMMO.Protocol.GameEvent()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EventsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public uint LastProcessedSequenceNumber { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<CppMMO.Protocol.S_WorldSnapshot> CreateS_WorldSnapshot(FlatBufferBuilder builder,
      ulong tick_number = 0,
      ulong server_time = 0,
      VectorOffset player_statesOffset = default(VectorOffset),
      VectorOffset eventsOffset = default(VectorOffset),
      uint last_processed_sequence_number = 0) {
    builder.StartTable(5);
    S_WorldSnapshot.AddServerTime(builder, server_time);
    S_WorldSnapshot.AddTickNumber(builder, tick_number);
    S_WorldSnapshot.AddLastProcessedSequenceNumber(builder, last_processed_sequence_number);
    S_WorldSnapshot.AddEvents(builder, eventsOffset);
    S_WorldSnapshot.AddPlayerStates(builder, player_statesOffset);
    return S_WorldSnapshot.EndS_WorldSnapshot(builder);
  }

  public static void StartS_WorldSnapshot(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddTickNumber(FlatBufferBuilder builder, ulong tickNumber) { builder.AddUlong(0, tickNumber, 0); }
  public static void AddServerTime(FlatBufferBuilder builder, ulong serverTime) { builder.AddUlong(1, serverTime, 0); }
  public static void AddPlayerStates(FlatBufferBuilder builder, VectorOffset playerStatesOffset) { builder.AddOffset(2, playerStatesOffset.Value, 0); }
  public static VectorOffset CreatePlayerStatesVector(FlatBufferBuilder builder, Offset<CppMMO.Protocol.PlayerState>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePlayerStatesVectorBlock(FlatBufferBuilder builder, Offset<CppMMO.Protocol.PlayerState>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayerStatesVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<CppMMO.Protocol.PlayerState>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayerStatesVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<CppMMO.Protocol.PlayerState>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPlayerStatesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEvents(FlatBufferBuilder builder, VectorOffset eventsOffset) { builder.AddOffset(3, eventsOffset.Value, 0); }
  public static VectorOffset CreateEventsVector(FlatBufferBuilder builder, Offset<CppMMO.Protocol.GameEvent>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEventsVectorBlock(FlatBufferBuilder builder, Offset<CppMMO.Protocol.GameEvent>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEventsVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<CppMMO.Protocol.GameEvent>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEventsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<CppMMO.Protocol.GameEvent>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartEventsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLastProcessedSequenceNumber(FlatBufferBuilder builder, uint lastProcessedSequenceNumber) { builder.AddUint(4, lastProcessedSequenceNumber, 0); }
  public static Offset<CppMMO.Protocol.S_WorldSnapshot> EndS_WorldSnapshot(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CppMMO.Protocol.S_WorldSnapshot>(o);
  }
  public S_WorldSnapshotT UnPack() {
    var _o = new S_WorldSnapshotT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(S_WorldSnapshotT _o) {
    _o.TickNumber = this.TickNumber;
    _o.ServerTime = this.ServerTime;
    _o.PlayerStates = new List<CppMMO.Protocol.PlayerStateT>();
    for (var _j = 0; _j < this.PlayerStatesLength; ++_j) {_o.PlayerStates.Add(this.PlayerStates(_j).HasValue ? this.PlayerStates(_j).Value.UnPack() : null);}
    _o.Events = new List<CppMMO.Protocol.GameEventT>();
    for (var _j = 0; _j < this.EventsLength; ++_j) {_o.Events.Add(this.Events(_j).HasValue ? this.Events(_j).Value.UnPack() : null);}
    _o.LastProcessedSequenceNumber = this.LastProcessedSequenceNumber;
  }
  public static Offset<CppMMO.Protocol.S_WorldSnapshot> Pack(FlatBufferBuilder builder, S_WorldSnapshotT _o) {
    if (_o == null) return default(Offset<CppMMO.Protocol.S_WorldSnapshot>);
    var _player_states = default(VectorOffset);
    if (_o.PlayerStates != null) {
      var __player_states = new Offset<CppMMO.Protocol.PlayerState>[_o.PlayerStates.Count];
      for (var _j = 0; _j < __player_states.Length; ++_j) { __player_states[_j] = CppMMO.Protocol.PlayerState.Pack(builder, _o.PlayerStates[_j]); }
      _player_states = CreatePlayerStatesVector(builder, __player_states);
    }
    var _events = default(VectorOffset);
    if (_o.Events != null) {
      var __events = new Offset<CppMMO.Protocol.GameEvent>[_o.Events.Count];
      for (var _j = 0; _j < __events.Length; ++_j) { __events[_j] = CppMMO.Protocol.GameEvent.Pack(builder, _o.Events[_j]); }
      _events = CreateEventsVector(builder, __events);
    }
    return CreateS_WorldSnapshot(
      builder,
      _o.TickNumber,
      _o.ServerTime,
      _player_states,
      _events,
      _o.LastProcessedSequenceNumber);
  }
}

public class S_WorldSnapshotT
{
  public ulong TickNumber { get; set; }
  public ulong ServerTime { get; set; }
  public List<CppMMO.Protocol.PlayerStateT> PlayerStates { get; set; }
  public List<CppMMO.Protocol.GameEventT> Events { get; set; }
  public uint LastProcessedSequenceNumber { get; set; }

  public S_WorldSnapshotT() {
    this.TickNumber = 0;
    this.ServerTime = 0;
    this.PlayerStates = null;
    this.Events = null;
    this.LastProcessedSequenceNumber = 0;
  }
}


static public class S_WorldSnapshotVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*TickNumber*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*ServerTime*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyVectorOfTables(tablePos, 8 /*PlayerStates*/, CppMMO.Protocol.PlayerStateVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 10 /*Events*/, CppMMO.Protocol.GameEventVerify.Verify, false)
      && verifier.VerifyField(tablePos, 12 /*LastProcessedSequenceNumber*/, 4 /*uint*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
