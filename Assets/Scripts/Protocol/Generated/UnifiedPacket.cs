// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct UnifiedPacket : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static UnifiedPacket GetRootAsUnifiedPacket(ByteBuffer _bb) { return GetRootAsUnifiedPacket(_bb, new UnifiedPacket()); }
  public static UnifiedPacket GetRootAsUnifiedPacket(ByteBuffer _bb, UnifiedPacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyUnifiedPacket(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, UnifiedPacketVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public UnifiedPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CppMMO.Protocol.PacketId Id { get { int o = __p.__offset(4); return o != 0 ? (CppMMO.Protocol.PacketId)__p.bb.GetUshort(o + __p.bb_pos) : CppMMO.Protocol.PacketId.NONE; } }
  public CppMMO.Protocol.Packet DataType { get { int o = __p.__offset(6); return o != 0 ? (CppMMO.Protocol.Packet)__p.bb.Get(o + __p.bb_pos) : CppMMO.Protocol.Packet.NONE; } }
  public TTable? Data<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public CppMMO.Protocol.C_Login DataAsC_Login() { return Data<CppMMO.Protocol.C_Login>().Value; }
  public CppMMO.Protocol.S_LoginSuccess DataAsS_LoginSuccess() { return Data<CppMMO.Protocol.S_LoginSuccess>().Value; }
  public CppMMO.Protocol.S_LoginFailure DataAsS_LoginFailure() { return Data<CppMMO.Protocol.S_LoginFailure>().Value; }
  public CppMMO.Protocol.C_Chat DataAsC_Chat() { return Data<CppMMO.Protocol.C_Chat>().Value; }
  public CppMMO.Protocol.S_Chat DataAsS_Chat() { return Data<CppMMO.Protocol.S_Chat>().Value; }
  public CppMMO.Protocol.C_PlayerInput DataAsC_PlayerInput() { return Data<CppMMO.Protocol.C_PlayerInput>().Value; }
  public CppMMO.Protocol.S_WorldSnapshot DataAsS_WorldSnapshot() { return Data<CppMMO.Protocol.S_WorldSnapshot>().Value; }
  public CppMMO.Protocol.S_StateCorrection DataAsS_StateCorrection() { return Data<CppMMO.Protocol.S_StateCorrection>().Value; }
  public CppMMO.Protocol.S_GameTick DataAsS_GameTick() { return Data<CppMMO.Protocol.S_GameTick>().Value; }
  public CppMMO.Protocol.C_EnterZone DataAsC_EnterZone() { return Data<CppMMO.Protocol.C_EnterZone>().Value; }
  public CppMMO.Protocol.S_ZoneEntered DataAsS_ZoneEntered() { return Data<CppMMO.Protocol.S_ZoneEntered>().Value; }
  public CppMMO.Protocol.S_PlayerJoined DataAsS_PlayerJoined() { return Data<CppMMO.Protocol.S_PlayerJoined>().Value; }
  public CppMMO.Protocol.S_PlayerLeft DataAsS_PlayerLeft() { return Data<CppMMO.Protocol.S_PlayerLeft>().Value; }

  public static Offset<CppMMO.Protocol.UnifiedPacket> CreateUnifiedPacket(FlatBufferBuilder builder,
      CppMMO.Protocol.PacketId id = CppMMO.Protocol.PacketId.NONE,
      CppMMO.Protocol.Packet data_type = CppMMO.Protocol.Packet.NONE,
      int dataOffset = 0) {
    builder.StartTable(3);
    UnifiedPacket.AddData(builder, dataOffset);
    UnifiedPacket.AddId(builder, id);
    UnifiedPacket.AddDataType(builder, data_type);
    return UnifiedPacket.EndUnifiedPacket(builder);
  }

  public static void StartUnifiedPacket(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, CppMMO.Protocol.PacketId id) { builder.AddUshort(0, (ushort)id, 0); }
  public static void AddDataType(FlatBufferBuilder builder, CppMMO.Protocol.Packet dataType) { builder.AddByte(1, (byte)dataType, 0); }
  public static void AddData(FlatBufferBuilder builder, int dataOffset) { builder.AddOffset(2, dataOffset, 0); }
  public static Offset<CppMMO.Protocol.UnifiedPacket> EndUnifiedPacket(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CppMMO.Protocol.UnifiedPacket>(o);
  }
  public static void FinishUnifiedPacketBuffer(FlatBufferBuilder builder, Offset<CppMMO.Protocol.UnifiedPacket> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedUnifiedPacketBuffer(FlatBufferBuilder builder, Offset<CppMMO.Protocol.UnifiedPacket> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class UnifiedPacketVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 2 /*CppMMO.Protocol.PacketId*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*DataType*/, 1 /*CppMMO.Protocol.Packet*/, 1, false)
      && verifier.VerifyUnion(tablePos, 6, 8 /*Data*/, CppMMO.Protocol.PacketVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
