// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

public enum Packet : byte
{
  NONE = 0,
  C_Login = 1,
  S_LoginSuccess = 2,
  S_LoginFailure = 3,
  C_Chat = 4,
  S_Chat = 5,
  C_PlayerInput = 6,
  S_WorldSnapshot = 7,
  S_StateCorrection = 8,
  S_GameTick = 9,
  C_EnterZone = 10,
  S_ZoneEntered = 11,
  S_PlayerJoined = 12,
  S_PlayerLeft = 13,
};

public class PacketUnion {
  public Packet Type { get; set; }
  public object Value { get; set; }

  public PacketUnion() {
    this.Type = Packet.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public CppMMO.Protocol.C_LoginT AsC_Login() { return this.As<CppMMO.Protocol.C_LoginT>(); }
  public static PacketUnion FromC_Login(CppMMO.Protocol.C_LoginT _c_login) { return new PacketUnion{ Type = Packet.C_Login, Value = _c_login }; }
  public CppMMO.Protocol.S_LoginSuccessT AsS_LoginSuccess() { return this.As<CppMMO.Protocol.S_LoginSuccessT>(); }
  public static PacketUnion FromS_LoginSuccess(CppMMO.Protocol.S_LoginSuccessT _s_loginsuccess) { return new PacketUnion{ Type = Packet.S_LoginSuccess, Value = _s_loginsuccess }; }
  public CppMMO.Protocol.S_LoginFailureT AsS_LoginFailure() { return this.As<CppMMO.Protocol.S_LoginFailureT>(); }
  public static PacketUnion FromS_LoginFailure(CppMMO.Protocol.S_LoginFailureT _s_loginfailure) { return new PacketUnion{ Type = Packet.S_LoginFailure, Value = _s_loginfailure }; }
  public CppMMO.Protocol.C_ChatT AsC_Chat() { return this.As<CppMMO.Protocol.C_ChatT>(); }
  public static PacketUnion FromC_Chat(CppMMO.Protocol.C_ChatT _c_chat) { return new PacketUnion{ Type = Packet.C_Chat, Value = _c_chat }; }
  public CppMMO.Protocol.S_ChatT AsS_Chat() { return this.As<CppMMO.Protocol.S_ChatT>(); }
  public static PacketUnion FromS_Chat(CppMMO.Protocol.S_ChatT _s_chat) { return new PacketUnion{ Type = Packet.S_Chat, Value = _s_chat }; }
  public CppMMO.Protocol.C_PlayerInputT AsC_PlayerInput() { return this.As<CppMMO.Protocol.C_PlayerInputT>(); }
  public static PacketUnion FromC_PlayerInput(CppMMO.Protocol.C_PlayerInputT _c_playerinput) { return new PacketUnion{ Type = Packet.C_PlayerInput, Value = _c_playerinput }; }
  public CppMMO.Protocol.S_WorldSnapshotT AsS_WorldSnapshot() { return this.As<CppMMO.Protocol.S_WorldSnapshotT>(); }
  public static PacketUnion FromS_WorldSnapshot(CppMMO.Protocol.S_WorldSnapshotT _s_worldsnapshot) { return new PacketUnion{ Type = Packet.S_WorldSnapshot, Value = _s_worldsnapshot }; }
  public CppMMO.Protocol.S_StateCorrectionT AsS_StateCorrection() { return this.As<CppMMO.Protocol.S_StateCorrectionT>(); }
  public static PacketUnion FromS_StateCorrection(CppMMO.Protocol.S_StateCorrectionT _s_statecorrection) { return new PacketUnion{ Type = Packet.S_StateCorrection, Value = _s_statecorrection }; }
  public CppMMO.Protocol.S_GameTickT AsS_GameTick() { return this.As<CppMMO.Protocol.S_GameTickT>(); }
  public static PacketUnion FromS_GameTick(CppMMO.Protocol.S_GameTickT _s_gametick) { return new PacketUnion{ Type = Packet.S_GameTick, Value = _s_gametick }; }
  public CppMMO.Protocol.C_EnterZoneT AsC_EnterZone() { return this.As<CppMMO.Protocol.C_EnterZoneT>(); }
  public static PacketUnion FromC_EnterZone(CppMMO.Protocol.C_EnterZoneT _c_enterzone) { return new PacketUnion{ Type = Packet.C_EnterZone, Value = _c_enterzone }; }
  public CppMMO.Protocol.S_ZoneEnteredT AsS_ZoneEntered() { return this.As<CppMMO.Protocol.S_ZoneEnteredT>(); }
  public static PacketUnion FromS_ZoneEntered(CppMMO.Protocol.S_ZoneEnteredT _s_zoneentered) { return new PacketUnion{ Type = Packet.S_ZoneEntered, Value = _s_zoneentered }; }
  public CppMMO.Protocol.S_PlayerJoinedT AsS_PlayerJoined() { return this.As<CppMMO.Protocol.S_PlayerJoinedT>(); }
  public static PacketUnion FromS_PlayerJoined(CppMMO.Protocol.S_PlayerJoinedT _s_playerjoined) { return new PacketUnion{ Type = Packet.S_PlayerJoined, Value = _s_playerjoined }; }
  public CppMMO.Protocol.S_PlayerLeftT AsS_PlayerLeft() { return this.As<CppMMO.Protocol.S_PlayerLeftT>(); }
  public static PacketUnion FromS_PlayerLeft(CppMMO.Protocol.S_PlayerLeftT _s_playerleft) { return new PacketUnion{ Type = Packet.S_PlayerLeft, Value = _s_playerleft }; }

  public static int Pack(Google.FlatBuffers.FlatBufferBuilder builder, PacketUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case Packet.C_Login: return CppMMO.Protocol.C_Login.Pack(builder, _o.AsC_Login()).Value;
      case Packet.S_LoginSuccess: return CppMMO.Protocol.S_LoginSuccess.Pack(builder, _o.AsS_LoginSuccess()).Value;
      case Packet.S_LoginFailure: return CppMMO.Protocol.S_LoginFailure.Pack(builder, _o.AsS_LoginFailure()).Value;
      case Packet.C_Chat: return CppMMO.Protocol.C_Chat.Pack(builder, _o.AsC_Chat()).Value;
      case Packet.S_Chat: return CppMMO.Protocol.S_Chat.Pack(builder, _o.AsS_Chat()).Value;
      case Packet.C_PlayerInput: return CppMMO.Protocol.C_PlayerInput.Pack(builder, _o.AsC_PlayerInput()).Value;
      case Packet.S_WorldSnapshot: return CppMMO.Protocol.S_WorldSnapshot.Pack(builder, _o.AsS_WorldSnapshot()).Value;
      case Packet.S_StateCorrection: return CppMMO.Protocol.S_StateCorrection.Pack(builder, _o.AsS_StateCorrection()).Value;
      case Packet.S_GameTick: return CppMMO.Protocol.S_GameTick.Pack(builder, _o.AsS_GameTick()).Value;
      case Packet.C_EnterZone: return CppMMO.Protocol.C_EnterZone.Pack(builder, _o.AsC_EnterZone()).Value;
      case Packet.S_ZoneEntered: return CppMMO.Protocol.S_ZoneEntered.Pack(builder, _o.AsS_ZoneEntered()).Value;
      case Packet.S_PlayerJoined: return CppMMO.Protocol.S_PlayerJoined.Pack(builder, _o.AsS_PlayerJoined()).Value;
      case Packet.S_PlayerLeft: return CppMMO.Protocol.S_PlayerLeft.Pack(builder, _o.AsS_PlayerLeft()).Value;
    }
  }
}



static public class PacketVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, byte typeId, uint tablePos)
  {
    bool result = true;
    switch((Packet)typeId)
    {
      case Packet.C_Login:
        result = CppMMO.Protocol.C_LoginVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_LoginSuccess:
        result = CppMMO.Protocol.S_LoginSuccessVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_LoginFailure:
        result = CppMMO.Protocol.S_LoginFailureVerify.Verify(verifier, tablePos);
        break;
      case Packet.C_Chat:
        result = CppMMO.Protocol.C_ChatVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_Chat:
        result = CppMMO.Protocol.S_ChatVerify.Verify(verifier, tablePos);
        break;
      case Packet.C_PlayerInput:
        result = CppMMO.Protocol.C_PlayerInputVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_WorldSnapshot:
        result = CppMMO.Protocol.S_WorldSnapshotVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_StateCorrection:
        result = CppMMO.Protocol.S_StateCorrectionVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_GameTick:
        result = CppMMO.Protocol.S_GameTickVerify.Verify(verifier, tablePos);
        break;
      case Packet.C_EnterZone:
        result = CppMMO.Protocol.C_EnterZoneVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_ZoneEntered:
        result = CppMMO.Protocol.S_ZoneEnteredVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_PlayerJoined:
        result = CppMMO.Protocol.S_PlayerJoinedVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_PlayerLeft:
        result = CppMMO.Protocol.S_PlayerLeftVerify.Verify(verifier, tablePos);
        break;
      default: result = true;
        break;
    }
    return result;
  }
}


}
